// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(150)
  lastname        String   @db.VarChar(150)
  email           String   @unique @db.VarChar(150)
  document_number String   @db.VarChar(150)
  password        String   @db.VarChar(150)
  created_at      DateTime @default(now()) @db.Timestamp(6)
}

model Student {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar(150)
  lastname        String    @db.VarChar(150)
  email           String    @unique @db.VarChar(150)
  document_number String    @db.VarChar(150)
  password        String    @db.VarChar(150)
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  Payment         Payment[]
  Subjects        Course[]
}

model Subject {
  id          Int       @id @default(autoincrement())
  topic       String    @unique @db.VarChar(150)
  description String    @db.VarChar(255)
  monthly_cost  Float
  period  Period  @default(annually)
  teacher_id  Int? 
  Teacher     Teacher?   @relation(fields: [teacher_id], references: [id])
  Payment     Payment[]
  Students    Course[]
}

enum Period{
  first_semester
  second_semester
  annually
}

model Course {
  id          Int       @id @default(autoincrement())
  student_id Int
  Student Student @relation(fields: [student_id], references: [id])

  subject_id Int
  Subject Subject @relation(fields: [subject_id], references: [id])

  grade Float?

}

model Teacher {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar(150)
  lastname        String    @db.VarChar(150)
  email           String    @unique @db.VarChar(150)
  document_number String    @db.VarChar(150)
  password        String    @db.VarChar(150)
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  Subject         Subject[]
}

model Payment {
  id         Int      @id @default(autoincrement())
  student_id Int
  Student    Student  @relation(fields: [student_id], references: [id])
  subject_id Int
  Subject    Subject  @relation(fields: [subject_id], references: [id])
  price      Float
  expiration_day Int?
  paid_on DateTime? 
  created_at DateTime @default(now()) @db.Timestamp(6)
}

model System {
  id         Int      @id @default(autoincrement())
  subjects_by_student Int
  subjects_by_teacher Int
}
